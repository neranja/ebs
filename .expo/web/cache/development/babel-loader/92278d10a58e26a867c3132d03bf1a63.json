{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Neranja\\\\Dropbox\\\\ebs\\\\app\\\\screens\\\\CustomerInq.js\";\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Picker } from '@react-native-picker/picker';\nimport Card from \"../components/Card\";\nimport Screen from \"../components/Screen\";\nimport Color from \"../conf/Color\";\nimport AppText from \"../components/AppText\";\nimport AppFormFild from \"../components/AppFormFild\";\nimport SubmitButton from \"../components/SubmitButton\";\nimport Footer from \"../components/Footer\";\nimport Logo from \"../components/Logo\";\nvar Listing = [{\n  id: 1,\n  title: 'Account Inquiry',\n  url: 'Account',\n  image: require(\"../Images/acc1.jpg\")\n}, {\n  id: 2,\n  title: 'Add New Feild Collection',\n  url: 'Account',\n  image: require(\"../Images/col.jpg\")\n}, {\n  id: 3,\n  title: 'Customer Inquiry',\n  url: 'Login',\n  image: require(\"../Images/cus.jpg\")\n}, {\n  id: 4,\n  title: 'About Samurdhi Department',\n  url: 'Account',\n  image: require(\"../Images/index.jpg\")\n}];\nvar validationSchema = Yup.object().shape({\n  accountNo: Yup.string().required().label(\"NIC/Customer Number\")\n});\nfunction CustomerInq(_ref) {\n  var _this = this;\n  var navigation = _ref.navigation,\n    route = _ref.route,\n    token = _ref.token,\n    branchId = _ref.branchId,\n    id = _ref.id;\n  return function (token, branchId, id) {\n    var id = route.params.params.id;\n    var token = route.params.params.token;\n    var branchId = route.params.params.branchId;\n    var accountStatus2 = route.params.params.accountStatus;\n    var accountNumber2 = route.params.params.accountNumber;\n    var customerName2 = route.params.params.customerName;\n    var customerCode2 = route.params.params.customerCode;\n    var nicNumber = route.params.params.nicNumber;\n    var dipType1 = route.params.params.dipType;\n    var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedLanguage = _useState2[0],\n      setSelectedLanguage = _useState2[1];\n    return React.createElement(Screen, {\n      style: styles.screen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, React.createElement(AppText, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Customer Inquiry\"))), React.createElement(Formik, {\n      initialValues: {\n        accountNo: \"\",\n        dipType: \"\"\n      },\n      onSubmit: function onSubmit(values) {\n        var cusNo = values.accountNo;\n        var dipType = selectedLanguage;\n        fetch('http://43.224.125.87:8181/ebs-rest/api/mobile/search customer', {\n          method: 'POST',\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n          },\n          body: JSON.stringify({\n            'numberType': dipType,\n            'nicNo': cusNo,\n            'customerNo': cusNo,\n            'branchId': branchId,\n            'officerId': id\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          var customerName = data.customerName;\n          var accountNumber1 = data.accountNumber;\n          var customerName1 = data.customerDetails.customerName;\n          var customerCode1 = data.customerDetails.customerCode;\n          var nicNumber1 = data.customerDetails.nicNumber;\n          navigation.navigate(\"Customer Inquiry\", {\n            params: {\n              token: token,\n              id: id,\n              customerName: customerName1,\n              customerCode: customerCode1,\n              nicNumber: nicNumber1,\n              branchId: branchId,\n              dipType: dipType,\n              cusNo: cusNo\n            }\n          });\n          if (token != undefined) {} else {}\n        });\n      },\n      validationSchema: validationSchema,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, function (_ref2) {\n      var handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        errors = _ref2.errors,\n        setFieldTouched = _ref2.setFieldTouched,\n        touched = _ref2.touched;\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.card,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, React.createElement(Picker, {\n        name: \"dipType\",\n        selectedValue: selectedLanguage,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return setSelectedLanguage(itemValue);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, React.createElement(Picker.Item, {\n        style: {\n          fontSize: 20,\n          color: '#007500'\n        },\n        label: \"--Please select a Type--\",\n        value: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 3\n        }\n      }), React.createElement(Picker.Item, {\n        style: {\n          fontSize: 20,\n          color: '#007500'\n        },\n        label: \" NIC\",\n        value: \"1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 3\n        }\n      }), React.createElement(Picker.Item, {\n        style: {\n          fontSize: 20,\n          color: '#00A300'\n        },\n        label: \" Customer number\",\n        value: \"2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 3\n        }\n      })), React.createElement(AppFormFild, {\n        icon: \"email\",\n        name: \"accountNo\",\n        onChangeText: handleChange(\"accountNo\"),\n        placeholder: \"NIC/Customer Number\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }), React.createElement(SubmitButton, {\n        title: \"Search\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 10\n        }\n      })), React.createElement(View, {\n        style: styles.card,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 10\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, React.createElement(AppText, {\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, \"Customer Details\")), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          padding: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 20,\n          height: 20\n        },\n        source: require(\"../Images/1786640.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }), React.createElement(AppText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, \"\\xA0 Customer Name\"), React.createElement(AppText, {\n        style: {\n          flexShrink: 2\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 52\n        }\n      }, \"\\xA0:\\xA0\", customerName2)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          padding: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 20,\n          height: 20\n        },\n        source: require(\"../Images/accNo.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }), React.createElement(AppText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, \"\\xA0 Customer Code\"), React.createElement(AppText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 52\n        }\n      }, \"\\xA0:\\xA0\", customerCode2)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          padding: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 20,\n          height: 20\n        },\n        source: require(\"../Images/nic.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }), React.createElement(AppText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, \"\\xA0  NIC Number\"), React.createElement(AppText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 50\n        }\n      }, \"\\xA0:\\xA0\", nicNumber)), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.button],\n        onPress: function onPress() {\n          return navigation.navigate(\"Account details\", {\n            navigation: navigation,\n            params: {\n              token: token,\n              branchId: branchId,\n              id: id,\n              dipType1: dipType1,\n              customerCode2: customerCode2\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, \" Account Details\"))), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.button],\n        onPress: function onPress() {\n          return navigation.navigate(\"Loan Details\", {\n            navigation: navigation,\n            params: {\n              token: token,\n              branchId: branchId,\n              id: id,\n              dipType1: dipType1,\n              customerCode2: customerCode2\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, \" Loan details\"))), React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      })));\n    }), React.createElement(Footer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 10\n      }\n    }));\n  }(token, branchId, id);\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 15,\n    backgroundColor: Color.light\n  },\n  card: {\n    marginTop: 10,\n    borderRadius: 15,\n    backgroundColor: Color.white,\n    marginBottom: 10,\n    overflow: \"hidden\"\n  },\n  title: {\n    color: Color.purple,\n    marginBottom: 2,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    fontSize: 20\n  },\n  button: {\n    backgroundColor: Color.purple,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    width: '100%',\n    marginBottom: 10\n  },\n  text: {\n    color: Color.white,\n    fontSize: 14,\n    textTransform: 'uppercase',\n    fontWeight: 'bold'\n  }\n});\nexport default CustomerInq;","map":{"version":3,"names":["React","useState","useEffect","Formik","Yup","Picker","Card","Screen","Color","AppText","AppFormFild","SubmitButton","Footer","Logo","Listing","id","title","url","image","require","validationSchema","object","shape","accountNo","string","required","label","CustomerInq","navigation","route","token","branchId","params","accountStatus2","accountStatus","accountNumber2","accountNumber","customerName2","customerName","customerCode2","customerCode","nicNumber","dipType1","dipType","selectedLanguage","setSelectedLanguage","styles","screen","card","values","cusNo","fetch","method","headers","body","JSON","stringify","then","res","json","data","accountNumber1","customerName1","customerDetails","customerCode1","nicNumber1","navigate","undefined","handleChange","handleSubmit","errors","setFieldTouched","touched","itemValue","itemIndex","fontSize","color","flexDirection","padding","width","height","flexShrink","button","text","StyleSheet","create","backgroundColor","light","marginTop","borderRadius","white","marginBottom","overflow","purple","alignContent","justifyContent","textAlign","alignItems","textTransform","fontWeight"],"sources":["C:/Users/Neranja/Dropbox/ebs/app/screens/CustomerInq.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { FlatList,StyleSheet, View,Image,Button,TouchableOpacity,Text } from 'react-native';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Picker} from '@react-native-picker/picker';\r\n\r\nimport Card from '../components/Card';\r\nimport Screen from '../components/Screen';\r\nimport Color from '../conf/Color';\r\nimport AppText from '../components/AppText';\r\nimport AppFormFild from '../components/AppFormFild';\r\nimport SubmitButton from '../components/SubmitButton';\r\nimport Footer from '../components/Footer';\r\nimport Logo from '../components/Logo';\r\n//102130904100304\r\nconst Listing=[{\r\n    id:1,\r\n     title:'Account Inquiry',\r\n     url:'Account',\r\n    // price:'100',\r\n    image:require('../Images/acc1.jpg'),\r\n},\r\n{\r\n    id:2,\r\n    title:'Add New Feild Collection',\r\n    url:'Account',\r\n    //price:'100',\r\n    image:require('../Images/col.jpg'),\r\n},\r\n{\r\n    id:3,\r\n    title:'Customer Inquiry',\r\n    url:'Login',\r\n   // price:'100',\r\n    image:require('../Images/cus.jpg'),\r\n},\r\n{\r\n    id:4,\r\n    title:'About Samurdhi Department',\r\n    url:'Account',\r\n    //price:'100',\r\n    image:require('../Images/index.jpg'),\r\n}]\r\n\r\nconst validationSchema=Yup.object().shape({\r\n    accountNo:Yup.string().required().label(\"NIC/Customer Number\"),\r\n   // password:Yup.string().required().min(4).label(\"Password\")\r\n  })\r\n\r\nfunction CustomerInq({navigation,route,token,branchId,id}) {\r\n\r\n    \r\n    var id=route.params.params.id;\r\n    var token=route.params.params.token;\r\n    var branchId=route.params.params.branchId;\r\n    var accountStatus2=route.params.params.accountStatus;\r\n   var accountNumber2= route.params.params.accountNumber;\r\n    var customerName2 =route.params.params.customerName;\r\n    var customerCode2=route.params.params.customerCode;\r\n    var nicNumber=route.params.params.nicNumber;\r\n    var dipType1=route.params.params.dipType;\r\n    const [selectedLanguage, setSelectedLanguage] = useState();\r\n    return (\r\n    \r\n        <Screen style={styles.screen}>\r\n             <View style={styles.card} >\r\n            <View >\r\n            <AppText style={styles.title}>Customer Inquiry</AppText>\r\n            </View>\r\n            \r\n        </View>\r\n        <Formik\r\n          initialValues={{accountNo:\"\",dipType:\"\"}}\r\n           onSubmit={ (values)=>{\r\n              var cusNo =values.accountNo;\r\n              var dipType=selectedLanguage;\r\n             // console.log(dipType);\r\n             // var branchId=branchId;\r\n              \r\n\r\n\r\n            fetch('http://43.224.125.87:8181/ebs-rest/api/mobile/search customer', {\r\n  method: 'POST',\r\n  headers: {\r\n   // 'Access-Control-Allow-Origin':'http://43.224.125.87:8181',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json',\r\n    'Authorization': 'Bearer '+token\r\n  },\r\n  body: JSON.stringify({\r\n    'numberType':dipType,\r\n    'nicNo':cusNo,\r\n    'customerNo':cusNo,\r\n    'branchId':branchId,\r\n    'officerId':id,\r\n  })\r\n}).then(function(res){ \r\n  // alert('Anouthorized deviced');\r\n  return res.json(); }).then(function(data){ \r\n   //console.log(data.customerDetails.customerCode);\r\n                       var  customerName=data. customerName;\r\n                        //    status=1;\r\n                          // token=data.token;\r\n                         var accountNumber1=data.accountNumber;\r\n                         var customerName1=data.customerDetails.customerName;\r\n                          var customerCode1=data.customerDetails.customerCode;\r\n                         var nicNumber1=data.customerDetails.nicNumber;\r\n\r\n                          navigation.navigate(\"Customer Inquiry\",{params:{token: token,id:id,customerName:customerName1,customerCode:customerCode1,nicNumber:nicNumber1,branchId:branchId,dipType:dipType,cusNo:cusNo}})\r\n                        //   username1=data.username;\r\n                        //   name=data.name;\r\n                        //  branchName=data.branchName;\r\n                        //   branchId=data.branchId;\r\n                        // console.log(token);\r\n                          if(token!=undefined){\r\n                           // navigation.navigate(\"Listing\",{navigation:navigation,params: { token: token}})\r\n                          }else{\r\n                            \r\n                          }\r\n         // alert( JSON.stringify( data ) )\r\n})\r\n            \r\n            }}\r\n         // onSubmit={values=>console.log(values),alert(),()=>{if(1==1){navigation.navigate(\"Listing\")}else{console.log('test')}}}\r\n          validationSchema={validationSchema} >\r\n            {({handleChange,handleSubmit,errors,setFieldTouched,touched})=>\r\n            <>\r\n            <View style={styles.card}>\r\n            <Picker \r\n             name=\"dipType\"\r\n  selectedValue={selectedLanguage}\r\n  onValueChange={(itemValue, itemIndex) =>\r\n    setSelectedLanguage(itemValue)\r\n  }>\r\n  <Picker.Item style={{fontSize:20,color:'#007500'}} label=\"--Please select a Type--\" value=\"\" />\r\n  <Picker.Item style={{fontSize:20,color:'#007500'}} label=\" NIC\" value=\"1\" />\r\n  <Picker.Item style={{fontSize:20,color:'#00A300'}} label=\" Customer number\" value=\"2\" />\r\n</Picker> \r\n            <AppFormFild\r\n         icon=\"email\"\r\n         name=\"accountNo\"\r\nonChangeText={handleChange(\"accountNo\")}\r\n      //   onBlur={()=>setFieldTouched(\"username\")}\r\n         placeholder=\"NIC/Customer Number\"/>\r\n\r\n\r\n\r\n{/* <ErrorMessage error={errors.username} visible={touched.username}/> */}\r\n         \r\n         {/* <ErrorMessage error={errors.password} visible={touched.password}/> */}\r\n          {/* <AppButton title=\"Login\" onPress={()=>navigation.navigate(\"Listing\")}/>  */}\r\n         <SubmitButton  title=\"Search\" /> \r\n\r\n         \r\n         </View>\r\n\r\n         <View style={styles.card} >\r\n            <View >\r\n            <AppText style={styles.title}>Customer Details</AppText>\r\n            </View>\r\n            <View style={{ flexDirection: 'row',padding:5}}>\r\n            <Image  style={{width:20,height:20}} source={require(\"../Images/1786640.png\")}></Image>\r\n            <AppText>&nbsp; Customer Name</AppText><AppText style={{flexShrink: 2}}>&nbsp;:&nbsp;{customerName2}</AppText>\r\n            </View>\r\n            <View style={{ flexDirection: 'row',padding:5}}>\r\n            <Image  style={{width:20,height:20}} source={require(\"../Images/accNo.png\")}></Image>\r\n            <AppText>&nbsp; Customer Code</AppText><AppText>&nbsp;:&nbsp;{customerCode2}</AppText>\r\n            </View>\r\n            <View style={{ flexDirection: 'row',padding:5}}>\r\n            <Image  style={{width:20,height:20}} source={require(\"../Images/nic.png\")}></Image>\r\n            <AppText>&nbsp;  NIC Number</AppText><AppText>&nbsp;:&nbsp;{nicNumber}</AppText>\r\n            </View>\r\n            {/* <View style={{ flexDirection: 'row',padding:5}}>\r\n            <Image  style={{width:20,height:20}} source={require(\"../Images/cusNo.png\")}></Image>\r\n            <AppText>&nbsp;Customer Number</AppText><AppText>&nbsp;:&nbsp;{customerCode}</AppText>\r\n            </View>\r\n            <View style={{ flexDirection: 'row',padding:5}}>\r\n            <Image  style={{width:20,height:20}} source={require(\"../Images/nic.png\")}></Image>\r\n            <AppText>&nbsp;NIC</AppText><AppText>&nbsp;:&nbsp;{nicNumber}</AppText>\r\n            </View>\r\n\r\n            <View style={{ flexDirection: 'row',padding:5}}>\r\n            <Image  style={{width:20,height:20}} source={require(\"../Images/money.png\")}></Image>\r\n            <AppText>&nbsp;Account Balance</AppText><AppText>&nbsp;:&nbsp;{accountBalance}</AppText>\r\n            </View> */}\r\n\r\n            <View style={{ flexDirection: 'row'}}>\r\n            <TouchableOpacity style={[styles.button]} onPress={()=>navigation.navigate(\"Account details\",{navigation:navigation,params:{token:token,branchId:branchId,id:id,dipType1:dipType1,customerCode2:customerCode2}})}>\r\n            <Text style={styles.text}> Account Details</Text>\r\n        </TouchableOpacity>\r\n            \r\n            </View>\r\n\r\n            <View style={{ flexDirection: 'row'}}>\r\n            <TouchableOpacity style={[styles.button]} onPress={()=>navigation.navigate(\"Loan Details\",{navigation:navigation,params:{token:token,branchId:branchId,id:id,dipType1:dipType1,customerCode2:customerCode2}})}>\r\n            <Text style={styles.text}> Loan details</Text>\r\n        </TouchableOpacity>\r\n            \r\n            </View>\r\n            {/* <View style={{ flexDirection: 'row'}}>\r\n            <SubmitButton style={{width:100}} title=\"Withdrawal\" onPress={()=>navigation.navigate(\"Deposit\",{params:{token:token,branchId:branchId,id:id,accountNumber:accountNumber2}})} />\r\n            </View> */}\r\n\r\n            <View>\r\n\r\n            </View>\r\n            \r\n        </View>\r\n\r\n            </>}\r\n          </Formik>\r\n         <Footer/>\r\n        </Screen>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen:{\r\n    padding:15,\r\n    backgroundColor:Color.light,\r\n    },\r\n    card:{\r\n        marginTop:10,\r\n        borderRadius:15,\r\n        backgroundColor:Color.white,\r\n        marginBottom:10,\r\n        overflow:\"hidden\",\r\n\r\n    },\r\n    title:{\r\n        color:Color.purple,\r\n        marginBottom:2,\r\n        alignContent:\"center\",\r\n        justifyContent:\"center\",\r\n        textAlign:\"center\",\r\n        fontSize:20,\r\n    },\r\n    button: {\r\n        backgroundColor:Color.purple,\r\n        borderRadius:10,\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        padding:10,\r\n        width:'100%',\r\n        marginBottom:10,\r\n      },\r\n      text:{\r\n        color:Color.white,\r\n        fontSize:14,\r\n        textTransform:'uppercase',\r\n        fontWeight:'bold',\r\n  \r\n      }\r\n   \r\n    \r\n   \r\n})\r\n\r\nexport default CustomerInq;"],"mappings":"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"},"metadata":{},"sourceType":"module"}