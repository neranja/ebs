{"ast":null,"code":"import React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Constants from 'expo-constants';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport From from \"../components/Form\";\nimport Screen from \"../components/Screen\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport AppButton from \"../components/AppButton\";\nimport AppText from \"../components/AppText\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport AppFormFild from \"../components/AppFormFild\";\nimport SubmitButton from \"../components/SubmitButton\";\nimport Footer from \"../components/Footer\";\nimport Logo from \"../components/Logo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object().shape({\n  username: Yup.string().required().label(\"Username\"),\n  password: Yup.string().required().min(4).label(\"Password\")\n});\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var deviceId = Constants.installationId;\n  return _jsx(ImageBackground, {\n    source: require(\"../Images/login.png\"),\n    children: _jsxs(Screen, {\n      style: styles.container,\n      children: [_jsx(Formik, {\n        initialValues: {\n          username: \"\",\n          password: \"\"\n        },\n        onSubmit: function onSubmit(values) {\n          var username = values.username;\n          var password = values.password;\n          fetch('http://43.224.125.87:8181/ebs-rest/api/auth/signin', {\n            method: 'POST',\n            headers: {\n              'Access-Control-Allow-Origin': '*',\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              'username': username,\n              'password': password,\n              'imeiNumber': deviceId\n            })\n          }).then(function (res) {\n            if (res.status == 401) {\n              alert('Unauthorized device or invalid username/Password. - ' + deviceId);\n            }\n\n            return res.json();\n          }).then(function (data) {\n            var token = data.token;\n            var type = data.type;\n            var id = data.id;\n            var username1 = data.username;\n            var name = data.name;\n            var branchName = data.branchName;\n            var branchId = data.branchId;\n            console.log(token);\n\n            if (token != undefined) {\n              navigation.navigate(\"Listing\", {\n                navigation: navigation,\n                params: {\n                  token: token,\n                  branchId: branchId,\n                  id: id,\n                  username1: username1,\n                  name: name,\n                  branchName: branchName\n                }\n              });\n            } else {\n              alert('Unauthorized device or invalid username/Password. - ' + deviceId);\n            }\n          });\n        },\n        validationSchema: validationSchema,\n        children: function children(_ref2) {\n          var handleChange = _ref2.handleChange,\n              handleSubmit = _ref2.handleSubmit,\n              errors = _ref2.errors,\n              setFieldTouched = _ref2.setFieldTouched,\n              touched = _ref2.touched;\n          return _jsxs(_Fragment, {\n            children: [_jsx(Logo, {}), _jsx(AppFormFild, {\n              icon: \"email\",\n              name: \"username\",\n              onChangeText: handleChange(\"username\"),\n              placeholder: \"Username\"\n            }), _jsx(AppFormFild, {\n              icon: \"lock\",\n              name: \"password\",\n              placeholder: \"Password\",\n              secureTextEntry: true,\n              textContentType: \"Password\"\n            }), _jsx(SubmitButton, {\n              title: \"Login\"\n            })]\n          });\n        }\n      }), _jsx(Footer, {})]\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  logo: {\n    flex: 1,\n    width: 100,\n    height: 100,\n    borderRadius: 15,\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    marginTop: 50,\n    marginBottom: 20\n  },\n  container: {\n    padding: 15\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","Component","Constants","createStackNavigator","NavigationContainer","Formik","Yup","From","Screen","AppTextInput","AppButton","AppText","ErrorMessage","AppFormFild","SubmitButton","Footer","Logo","validationSchema","object","shape","username","string","required","label","password","min","LoginScreen","navigation","deviceId","installationId","require","styles","container","values","fetch","method","headers","body","JSON","stringify","then","res","status","alert","json","data","token","type","id","username1","name","branchName","branchId","console","log","undefined","navigate","params","handleChange","handleSubmit","errors","setFieldTouched","touched","StyleSheet","create","logo","flex","width","height","borderRadius","alignItems","alignSelf","marginTop","marginBottom","padding"],"sources":["C:/Users/Neranja/Dropbox/ebs/app/screens/LoginScreen.js"],"sourcesContent":["import React ,{ Component} from 'react';\r\nimport {StyleSheet, View,Image, ImageBackground, Button} from 'react-native';\r\nimport Constants from 'expo-constants';\r\nimport {createStackNavigator} from \"@react-navigation/stack\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport From from '../components/Form';\r\nimport Screen from '../components/Screen';\r\nimport AppTextInput from '../components/AppTextInput';\r\nimport AppButton from '../components/AppButton';\r\nimport AppText from '../components/AppText';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport AppFormFild from '../components/AppFormFild';\r\nimport SubmitButton from '../components/SubmitButton';\r\nimport Footer from '../components/Footer';\r\nimport Logo from '../components/Logo';\r\n\r\nconst validationSchema=Yup.object().shape({\r\n  username:Yup.string().required().label(\"Username\"),\r\n  password:Yup.string().required().min(4).label(\"Password\")\r\n})\r\n//alert('',Constants.installationId);\r\nfunction LoginScreen({navigation}) {\r\nvar deviceId=Constants.installationId;\r\n//  console.log(deviceId);\r\n    return (\r\n      <ImageBackground source={require(\"../Images/login.png\")}>\r\n        <Screen style={styles.container}>\r\n         \r\n        {/* <Image  style={styles.logo} source={require(\"../Images/samurdhi.jpg\")}></Image> */}\r\n          <Formik\r\n          initialValues={{username:\"\",password:\"\"}}\r\n           onSubmit={ (values)=>{\r\n              var username =values.username;\r\n              var password =values.password;\r\n\r\n\r\n            fetch('http://43.224.125.87:8181/ebs-rest/api/auth/signin', {\r\n  method: 'POST',\r\n  headers: {\r\n   // 'Access-Control-Allow-Origin':'http://43.224.125.87:8181',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({\r\n    'username':username,\r\n    'password':password,\r\n    'imeiNumber':deviceId\r\n   // 'imeiNumber':\"0a5f8bb6-83af-48ec-bfe6-298067c0861d\"\r\n  })\r\n}).then(function(res){ \r\n  \r\n \r\n\r\n  if(res.status==401){\r\n    alert('Unauthorized device or invalid username/Password. - '+deviceId);\r\n\r\n  }\r\n\r\n   \r\n  return res.json(); }).then(function(data){ \r\n    \r\n  \r\n                         //  status=1;\r\n                        var  token=data.token;\r\n                       var  type=data.type;\r\n                        var   id=data.id;\r\n                         var  username1=data.username;\r\n                         var name=data.name;\r\n                       var  branchName=data.branchName;\r\n                        var  branchId=data.branchId;\r\n\r\n                        \r\n                         console.log(token);\r\n                          if(token!=undefined){\r\n                            navigation.navigate(\"Listing\",{navigation:navigation,params: { token: token,branchId:branchId,id:id,username1:username1,name:name,branchName:branchName}})\r\n                          }else{\r\n                            alert('Unauthorized device or invalid username/Password. - '+deviceId);\r\n                          }\r\n         // alert( JSON.stringify( data ) )\r\n})\r\n\r\n\r\n          //  alert('call');\r\n            }}\r\n         // onSubmit={values=>console.log(values),alert(),()=>{if(1==1){navigation.navigate(\"Listing\")}else{console.log('test')}}}\r\n          validationSchema={validationSchema} >\r\n            {({handleChange,handleSubmit,errors,setFieldTouched,touched})=>\r\n            <>\r\n            <Logo/>\r\n            <AppFormFild\r\n         icon=\"email\"\r\n         name=\"username\"\r\nonChangeText={handleChange(\"username\")}\r\n      //   onBlur={()=>setFieldTouched(\"username\")}\r\n         placeholder=\"Username\"/>\r\n{/* <ErrorMessage error={errors.username} visible={touched.username}/> */}\r\n         <AppFormFild\r\n         icon=\"lock\"\r\n         name=\"password\"\r\n//onChangeText={handleChange(\"password\")}\r\n//onBlur={()=>setFieldTouched(\"password\")}\r\n         placeholder=\"Password\"\r\n         secureTextEntry={true}\r\n         textContentType=\"Password\"/>\r\n         {/* <ErrorMessage error={errors.password} visible={touched.password}/> */}\r\n          {/* <AppButton title=\"Login\" onPress={()=>navigation.navigate(\"Listing\")}/>  */}\r\n         <SubmitButton  title=\"Login\" /> \r\n         \r\n\r\n            </>}\r\n          </Formik>\r\n         <Footer/>\r\n         \r\n        </Screen>\r\n        </ImageBackground>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    logo: {\r\n      flex: 1,\r\n      width: 100,\r\n      height:100,\r\n      borderRadius:15,\r\n      alignItems: \"center\",\r\n      alignSelf:\"center\",\r\n      marginTop:50,\r\n      marginBottom:20,\r\n    },\r\n    container:{\r\n      padding:15,\r\n    },\r\n  });\r\n\r\nexport default LoginScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}