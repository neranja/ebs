{"ast":null,"code":"import React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport From from \"../components/Form\";\nimport Screen from \"../components/Screen\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport AppButton from \"../components/AppButton\";\nimport AppText from \"../components/AppText\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport AppFormFild from \"../components/AppFormFild\";\nimport SubmitButton from \"../components/SubmitButton\";\nimport Footer from \"../components/Footer\";\nimport Logo from \"../components/Logo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object().shape({\n  username: Yup.string().required().label(\"Username\"),\n  password: Yup.string().required().min(4).label(\"Password\")\n});\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(Screen, {\n    style: styles.container,\n    children: [_jsx(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      onSubmit: function onSubmit(values) {\n        var username = values.username;\n        var password = values.password;\n        fetch('http://43.224.125.87:8181/ebs-rest/api/auth/signin', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            'username': username,\n            'password': password\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          console.log(data);\n          status = 1;\n          token = data.token;\n          type = data.type;\n          id = data.id;\n          username1 = data.username;\n          name = data.name;\n          branchName = data.branchName;\n          branchId = data.branchId;\n\n          if (token != undefined) {}\n        });\n        navigation.navigate(\"Listing\");\n      },\n      validationSchema: validationSchema,\n      children: function children(_ref2) {\n        var handleChange = _ref2.handleChange,\n            handleSubmit = _ref2.handleSubmit,\n            errors = _ref2.errors,\n            setFieldTouched = _ref2.setFieldTouched,\n            touched = _ref2.touched;\n        return _jsxs(_Fragment, {\n          children: [_jsx(Logo, {}), _jsx(AppFormFild, {\n            icon: \"email\",\n            name: \"username\",\n            onChangeText: handleChange(\"username\"),\n            placeholder: \"Username\"\n          }), _jsx(AppFormFild, {\n            icon: \"lock\",\n            name: \"password\",\n            placeholder: \"Password\",\n            secureTextEntry: true,\n            textContentType: \"Password\"\n          }), _jsx(SubmitButton, {\n            title: \"Login\",\n            onPress: function onPress() {\n              return navigation.navigate(\"Listing\");\n            }\n          })]\n        });\n      }\n    }), _jsx(Footer, {})]\n  });\n}\n\nvar styles = StyleSheet.create({\n  logo: {\n    flex: 1,\n    width: 100,\n    height: 100,\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    marginTop: 50,\n    marginBottom: 20\n  },\n  container: {\n    padding: 15\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","Component","createStackNavigator","NavigationContainer","Formik","Yup","From","Screen","AppTextInput","AppButton","AppText","ErrorMessage","AppFormFild","SubmitButton","Footer","Logo","validationSchema","object","shape","username","string","required","label","password","min","LoginScreen","navigation","styles","container","values","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","status","token","type","id","username1","name","branchName","branchId","undefined","navigate","handleChange","handleSubmit","errors","setFieldTouched","touched","StyleSheet","create","logo","flex","width","height","alignItems","alignSelf","marginTop","marginBottom","padding"],"sources":["F:/MobileApp/ebs/app/screens/LoginScreen.js"],"sourcesContent":["import React ,{ Component} from 'react';\r\nimport {StyleSheet, View,Image, ImageBackground, Button} from 'react-native';\r\nimport {createStackNavigator} from \"@react-navigation/stack\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport From from '../components/Form';\r\nimport Screen from '../components/Screen';\r\nimport AppTextInput from '../components/AppTextInput';\r\nimport AppButton from '../components/AppButton';\r\nimport AppText from '../components/AppText';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport AppFormFild from '../components/AppFormFild';\r\nimport SubmitButton from '../components/SubmitButton';\r\nimport Footer from '../components/Footer';\r\nimport Logo from '../components/Logo';\r\n\r\nconst validationSchema=Yup.object().shape({\r\n  username:Yup.string().required().label(\"Username\"),\r\n  password:Yup.string().required().min(4).label(\"Password\")\r\n})\r\n\r\nfunction LoginScreen({navigation}) {\r\n\r\n \r\n    return (\r\n      \r\n        <Screen style={styles.container}>\r\n         \r\n        {/* <Image  style={styles.logo} source={require(\"../Images/samurdhi.jpg\")}></Image> */}\r\n          <Formik\r\n          initialValues={{username:\"\",password:\"\"}}\r\n           onSubmit={ (values)=>{\r\n              var username =values.username;\r\n              var password =values.password;\r\n\r\n\r\n            fetch('http://43.224.125.87:8181/ebs-rest/api/auth/signin', {\r\n  method: 'POST',\r\n  headers: {\r\n\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({\r\n    'username':username,\r\n    'password':password\r\n  })\r\n}).then(function(res){ return res.json(); }).then(function(data){ \r\n  console.log(data);\r\n                           status=1;\r\n                          token=data.token;\r\n                         type=data.type;\r\n                          id=data.id;\r\n                          username1=data.username;\r\n                          name=data.name;\r\n                         branchName=data.branchName;\r\n                          branchId=data.branchId;\r\n                         \r\n                          if(token!=undefined){\r\n \r\n                          }\r\n         // alert( JSON.stringify( data ) )\r\n})\r\n            \r\n            navigation.navigate(\"Listing\")}}\r\n         // onSubmit={values=>console.log(values),alert(),()=>{if(1==1){navigation.navigate(\"Listing\")}else{console.log('test')}}}\r\n          validationSchema={validationSchema} >\r\n            {({handleChange,handleSubmit,errors,setFieldTouched,touched})=>\r\n            <>\r\n            <Logo/>\r\n            <AppFormFild\r\n         icon=\"email\"\r\n         name=\"username\"\r\nonChangeText={handleChange(\"username\")}\r\n      //   onBlur={()=>setFieldTouched(\"username\")}\r\n         placeholder=\"Username\"/>\r\n{/* <ErrorMessage error={errors.username} visible={touched.username}/> */}\r\n         <AppFormFild\r\n         icon=\"lock\"\r\n         name=\"password\"\r\n//onChangeText={handleChange(\"password\")}\r\n//onBlur={()=>setFieldTouched(\"password\")}\r\n         placeholder=\"Password\"\r\n         secureTextEntry={true}\r\n         textContentType=\"Password\"/>\r\n         {/* <ErrorMessage error={errors.password} visible={touched.password}/> */}\r\n          {/* <AppButton title=\"Login\" onPress={()=>navigation.navigate(\"Listing\")}/>  */}\r\n         <SubmitButton  title=\"Login\" onPress={()=>navigation.navigate(\"Listing\")}/> \r\n         \r\n\r\n            </>}\r\n          </Formik>\r\n         <Footer/>\r\n         \r\n        </Screen>\r\n        \r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    logo: {\r\n      flex: 1,\r\n      width: 100,\r\n      height:100,\r\n      alignItems: \"center\",\r\n      alignSelf:\"center\",\r\n      marginTop:50,\r\n      marginBottom:20,\r\n    },\r\n    container:{\r\n      padding:15,\r\n    },\r\n  });\r\n\r\nexport default LoginScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}